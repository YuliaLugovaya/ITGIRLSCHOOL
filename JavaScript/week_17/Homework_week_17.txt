Неделя 17


Вопросы


1. Какие кавычки можно использовать для создания строк в JS и в чем разница между ними?

Можно использовать три вида кавычек: одинарные 'кавычки', двойные "кавычки" и обратные `кавычки`.

a. Одинарные и двойные можно использовать также внутри строки, пока они будут отличаться от кавычек снаружи:
" Это 'кавычки' "
' Это "кавычки" '

b. Если использовать обратные кавычки, то в такую строку можно вставлять произвольные выражения, обернув их в ${…}:
let word = "кавычки";
console.log(`Это ${word}!`); // Это кавычки!

Кроме того, обратные кавычки могут занимать более одной строки:
let list = `Кавычки:
 * Одинарные
 * Двойные
 * Обратные
`;
console.log(list); 
// Кавычки:
 * Одинарные
 * Двойные
 * Обратные


2. Какими методами можно найти подстроку в строке? Приведите пример.

a. Метод indexOf() возвращает индекс (номер позиции) в первое вхождение указанного текста в строку. Метод lastIndexOf() возвращает индекс последнего вхождения 
указанного текста в строку. Оба метода возвращают значение -1, если текст не найден.

let string = "Это JavaScript";
let word = string.indexOf("JavaScript");
console.log(word); //4

b. Метод search() тоже ищет строки по заданному значению и возвращает позицию совпадения:
let string = "Это JavaScript";
let word = string.search("JavaScript");
console.log(word); //тоже 4

Различия в том, что метод search() может принимать гораздо более мощные значения поиска - регулярные выражения.


3. Самостоятельно разберитесь, зачем нужен специальный символ \n?

Специальный символ \n – это символ перевода текста на новую строку.

let js = 'Это \nJavaScript'
console.log(js);

Выведет:

Это
JavaScript

Символ \n часто обозначают как LF (Line Feed). Это пример экранирующей последовательности. Их еще называют управляющими конструкциями. Перевод строки \n нужно использовать 
для правильного форматирования текста.

Не имеет значения, что стоит перед или после \n: символ или пустая строка. Перевод будет обнаружен и выполнен в любом случае. Строка может содержать один символ 
или вообще ноль символов. А еще строка может содержать только \n. 


4. Напишите код, который делает первый символ заглавным. Например, "настя" ⇒ "Настя"

let word = 'слово'
let newWord = word[0].toUpperCase() + word.slice(1, );
console.log(newWord);

// выведет Слово


5. Как создать дату 24 января 2021 года, 22 часа 51 минута? Временная зона – местная.

Использовать встроенный конструктор new Date. Он основывается на местной временной зоне. Месяцы здесь начинаются с нуля.

let anyDate = new Date(2021, 0, 24, 22, 51);
alert(anyDate);


6. Как посчитать, сколько секунд осталось до завтра?

Из общего количества 86 400 секунд в сутки вычесть количество оставшихся секунд в сутках до завтра.

function getSeconds() {
let now = new Date();
let hour = now.getHours();
let minutes = now.getMinutes();
let seconds = now.getSeconds();
let today = hour * 3600 + minutes * 60 + seconds;
let allSeconds = 60 * 60 * 24;
return allSeconds - today;
}

console.log(getSeconds())


7. Как выделить из строки с денежной суммой (например, 120р. или 99€) только цифры, т.е. 120 и 99?

let price = '99$';
function selectString(price) {
  return price.slice(0, -1);
}

console.log(selectString(price)) // выведет 99


8. Зачем нужны функции join и split?

Функция split нужна для того, чтобы преобразовать строку в массив:

let fio = 'Фамилия Имя Отчество';
let arr = fio.split(" ");
console.log(arr); // выведет ["Фамилия", "Имя", "Отчество"]

Функция join нужна для того, чтобы склеить из массива строку:

let fio = 'Фамилия Имя Отчество';
let arr = fio.split(" ");
let string = arr.join(" ")
console.log(string); // выведет Фамилия Имя Отчество'


9. Какой из вариантов округления делает это по математическим правилам?

Math.round(параметр) – это математическое округление: когда дробная часть числа больше или равна 0.5, то оно округляется в большую сторону, а иначе в меньшую сторону.


10. Как сгенерировать случайное число от 1 до 100?

Использовать Math.floor (округление в меньшую сторону) и Math.random():

let number = Math.floor(Math.random() * 100) + 1;
console.log(number); // выведет рандомное число в диапазоне 1-100


11. Зачем нужна функция str.trim() ?

Функция trim() удаляет пробелы в начале и в конце строки. Этот метод создает копию строки, удаляет все начальные и конечные пробельные символы, а затем возвращает результат. 
Пробельными символами в этом контексте считаются все пробельные символы, например, пробел, табуляция, неразрывный пробел, символы конца строки и др.

Поскольку метод trim() возвращает копию строки, в исходной строке начальный и конечный пробелы сохраняются.


12. Что такое флаг?

Флаги позволяют изменить поведение регулярных выражений и правила поиска совпадений в строке. В JavaScript их всего шесть:

- i
С этим флагом поиск не зависит от регистра: нет разницы между A и a.
- g
С этим флагом поиск ищет все совпадения, без него – только первое.
- m
Многострочный режим.
- s
Включает режим «dotall», при котором точка . может соответствовать символу перевода строки \n.
- u
Включает полную поддержку Юникода. 
- y
Режим поиска на конкретной позиции в тексте.




Практическое задание


1. Сделайте интерфейс преобразования ФИО на три поля (input). Учтите, пожалуйста, все нюансы - лишние пробелы, отсутствие больших букв в именах и пр. 
Результат должен получиться идеальным. 
(папка fio)

2. Сделайте интерфейс для анонимных комментариев со спамфильтром. Необходимо реализовать отображение и добавление сообщений, а также функцию checkSpam(str), 
заменяющую 'viagra' или 'XXX' на ***. Функция должна быть нечувствительна к регистру.
(папка anonim)

3. Напишите функцию formatDate(date), форматирующую date по следующему принципу: 
    - Если спустя date прошло менее 1 секунды, вывести "прямо сейчас".
    - В противном случае, если с date прошло меньше 1 минуты, вывести "n сек. назад".
    - В противном случае, если меньше часа, вывести "m мин. назад".
    - В противном случае, полная дата в формате "DD.MM.YY HH:mm". А именно: "день.месяц.год часы:минуты", всё в виде двух цифр, т.е. 31.12.16 10:00.
(папка date)

4. Сделайте генератор 10 случайных чисел (по нажатию на кнопку) в диапазоне от -10 до 10 и найдите среди них минимальное, максимальное и среднее арифметическое, 
а также сумму и произведение всех этих чисел.
(папка random)
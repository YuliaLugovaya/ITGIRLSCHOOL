Неделя 13


Вопросы


1. Какие бывают варианты объявления переменных?
Чтобы объявить переменную, необходимо использовать ключевое слово (let. const) и имя переменной. При ключевом слове let переменную можно изменять, а объявление const задаёт значение, 
которое менять нельзя. Переменная может быть объявлена только один раз.

Вариант 1:
let age;
age = 25;               

Изменять переменную можно сколько нужно раз:
let age;
age = 25;
age = 26;
age = 27;
При изменении значения старые данные удаляются из переменной, и выводиться будет самое последнее.

Вариант 2 – краткая запись:
let age = 25;      

Вариант 3 – несколько переменных:
в одной строке
let person = ‘Катя’, age = 25, message = ‘Привет!’;

либо на разных строках
let person = ‘Катя’, 
     age = 25, 
     message = ‘Привет!’;

Лучшим решением будет писать каждую переменную с новой строки для удобства и читаемости:
let person = ‘Катя’;
let age = 25; 
let message = ‘Привет!’;

Чтобы скопировать данные из одной переменной в другую, нужно их объявить следующим образом:
let age = 25; 
let message;
message = age;


2. Что выведет этот скрипт?
let name = "Ilya";

alert( `hello ${1}` );
- выведет hello 1

alert( `hello ${“name”}` );
- выведет hello name

alert( `hello ${name}` );
- выведет hello Ilya


3. Какое значение будет в z?

var x = 5;         
var y = 2;        
var z = x + y;
alert(z);

Ответ: 7


4. Какими тремя способами можно подключить JavaScript код?

Способ 1. 
Писать JavaScript код в html-странице внутри тега <script>. Его можно размещать либо внутри тега <head>, либо внутри тега <body> перед закрытием тега. Лучший вариант – 
перед закрывающимся </body>.

Способ 2.
Подключить через внешний файл:
<script src="путь /script.js"></script>

Способ 3 (устаревший):
Использовать строковую запись внутри нужного тега вместе с событием, по наступлению которого JavaScript код должен выполниться (например, onClick - нажатие на кнопку):
<button onClick="alert(Как тебя зовут?')">Нажми меня</button>


5. Есть ли какая-то разница между записями typeof str и typeof(str)?

У оператора typeof есть две синтаксические формы:
синтаксис оператора: typeof x;
синтаксис функции: typeof(x).
Это значит, что он работает одинаково со скобками или без скобок. 


6. Что вернет код?

function showX(x)
{ 
	return x;
}
alert(showX(28));

Код вернет число 28


7. Какой результат будет у выражений ниже?

"" + 1 + 0              // 10
"" - 1 + 0              // -1
true + false            // 1
6 / "3"                 // 2
"2" * "3"               // 6
4 + 5 + "px"            // 9px
"$" + 4 + 5             // $45
"4" – 2                 // 2
"4px" – 2               // NaN
7 / 0                   // Infinity
"  -9  " + 5            //  -9 5 
"  -9  " – 5            // -14
null + 1                // 1
undefined + 1           // NaN
" \t \n" – 2            // -2


8. Ниже приведён код, который запрашивает у пользователя два числа и показывает их сумму. Он работает неправильно. Код в примере выводит `12` (для значения полей по умолчанию). 
В чём ошибка? Исправьте её. Результат должен быть `3`.

let a = prompt("Первое число?", 1);
let b = prompt("Второе число?", 2);
alert(a + b); // возвращает 12

Ошибка в том, что переменные заданы в строках, и сложение происходит по правилам для строк – данные склеиваются.
Чтобы преобразовать строки в числа, нужно добавить функцию Number() или унарный +. Эти способы работают одинаково:

alert(Number(a) + Number(b));
или
alert(+a + +b);
вернет 3.


9. Что будет в x?

x = 5; 
++x; 
x -= 2;
alert(x);

Ответ: 4


10. Что выведет этот код?

function sum(x, y=0) {
  return x+y;
} 
alert(sum(5));

Ответ: 5



Практическое задание


1. Создайте страницу, которая по нажатию на кнопку спрашивает имя у пользователя и выводит персонифицированное приветственное сообщение типа "Привет, Маша!".

2. Сделайте простой калькулятор на 4 действия (сложение, вычитание, деление, умножение). 4 кнопки, по нажатию которые запрашиваются два числа и выдается результат их вычисления, 
соответствующий действию на кнопке
- задания недели 13 (week_13) я сделала в одном проекте, они находятся в папке greeting_and_calculator.